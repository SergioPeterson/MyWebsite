<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Sergio&#x27;s Secret Blog - programming</title>
    <subtitle>An assortment of my ramblings and random adventures.</subtitle>
    <link rel="self" type="application/atom+xml" href="http://localhost:3000/blog/categories/programming/atom.xml"/>
    <link rel="alternate" type="text/html" href="http://localhost:3000/blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-10-13T00:00:00+00:00</updated>
    <id>http://localhost:3000/blog/categories/programming/atom.xml</id>
    <entry xml:lang="en">
        <title>[11] Setting Up a Supercharged Neovim Configuration</title>
        <published>2024-10-13T00:00:00+00:00</published>
        <updated>2024-10-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/neovim-setup/"/>
        <id>http://localhost:3000/blog/neovim-setup/</id>
        
        <summary type="html">&lt;p&gt;Over the summer, after finally getting around to learning Vim motions (see blog
post &lt;a href=&quot;https:&#x2F;&#x2F;micahkepe.com&#x2F;blog&#x2F;vimtutor-sequel&quot;&gt;#9&lt;&#x2F;a&gt;), I quickly fell down the
Neovim rabbithole and have been procrastinating work by tinkering away at my
configurations ever since! This post will be sharing setup that I have currently
landed at to turn my Neovim editor into a supercharged workhorse.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[10] A Deep Dive into SQLite&#x27;s Query Optimizer</title>
        <published>2024-08-27T00:00:00+00:00</published>
        <updated>2024-08-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/sqlite-query-optimizer/"/>
        <id>http://localhost:3000/blog/sqlite-query-optimizer/</id>
        
        <summary type="html">&lt;p&gt;I &lt;strong&gt;love&lt;&#x2F;strong&gt; databases, but they are still largely a magical black box to me, so in this post, I&#x27;m going to explore how SQLite&#x27;s query optimizer works. We&#x27;ll delve together into the process of how SQL queries are parsed, optimized, and executed, with a particular focus on the optimization phase. By the end of this post, you&#x27;ll have a better understanding of how SQLite&#x27;s query optimizer works and how it can help you write more efficient queries.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[9] vimtutor-sequel: The Extended vimtutor</title>
        <published>2024-08-04T00:00:00+00:00</published>
        <updated>2024-08-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/vimtutor-sequel/"/>
        <id>http://localhost:3000/blog/vimtutor-sequel/</id>
        
        <summary type="html">&lt;p&gt;The vimtutor program is the essential starting point for anyone looking to learn the basics of using Vim. In as little as a half hour, you can learn 90% of what you&#x27;ll ever need for vim, however, there are many useful motions and commands that are left out of the program. This article details the simple software package I wrote to address this limitation, &lt;code&gt;vimtutor-sequel&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[7] An Optimistic Take: AI&#x27;s Augmentation of Software Professionals</title>
        <published>2024-07-19T00:00:00+00:00</published>
        <updated>2024-07-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/ai-job-impact/"/>
        <id>http://localhost:3000/blog/ai-job-impact/</id>
        
        <summary type="html">&lt;p&gt;No doubt you&#x27;ve heard it before: &quot;AI will make programmers obsolete&quot; or &quot;AI will take your job.&quot; But is this narrative accurate? News stories like Cognition AI&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.cognition.ai&#x2F;blog&#x2F;introducing-devin&quot;&gt;Devin&lt;&#x2F;a&gt;, albeit found to be &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=tNmgmwEtoWE&amp;amp;t=611s&quot;&gt;categorically a hoax&lt;&#x2F;a&gt;, have nonetheless fueled fears among software professionals about the future of their careers. However, the most current look at the state of AI in software development suggests a more nuanced and hopeful future.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[6] How Do Software Packages Work?</title>
        <published>2024-06-04T00:00:00+00:00</published>
        <updated>2024-06-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/software-packages/"/>
        <id>http://localhost:3000/blog/software-packages/</id>
        
        <summary type="html">&lt;p&gt;How do software packages work behind the scenes? How are they created, distributed, and installed? In this post, we&#x27;ll explore the lifecycle of software packages, from creation to installation, using the Node Package Manager (NPM) and the Autoprefixer package as real-world examples.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[5] Bloom Filters: Space-Efficient Probabilistic Data Structures</title>
        <published>2024-05-25T00:00:00+00:00</published>
        <updated>2024-05-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/bloom-filters/"/>
        <id>http://localhost:3000/blog/bloom-filters/</id>
        
        <summary type="html">&lt;p&gt;In the realm of computer science, efficiency is often the key to solving complex
problems. One elegant solution that stands out for its efficiency is the Bloom
filter. Despite being relatively lesser-known, Bloom filters offer a powerful
method for determining set membership while using minimal space. This post
explores what Bloom filters are, how they work, their applications in various
fields, and compares them with other data structures.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[4] WebP: A Case Study in the Hidden Vulnerabilities of Image Formats</title>
        <published>2024-05-13T00:00:00+00:00</published>
        <updated>2024-05-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/webp-vulnerability/"/>
        <id>http://localhost:3000/blog/webp-vulnerability/</id>
        
        <summary type="html">&lt;p&gt;Hacked by an image? How could that be possible? This is the story of how a
seemingly innocuous image format, WebP, was discovered to have a critical
vulnerability that could be exploited to execute arbitrary code on a victim&#x27;s
machine.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[3] Ingenious Algorithms We Take for Granted: PageRank, Spell Checkers, and Shazam</title>
        <published>2024-05-06T00:00:00+00:00</published>
        <updated>2024-05-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/ingenious-algorithms/"/>
        <id>http://localhost:3000/blog/ingenious-algorithms/</id>
        
        <summary type="html">&lt;p&gt;Algorithms are all around us. They are the invisible forces that power our
modern world, from the search engines we use to find information to the social
networks we use to connect with friends and family. In this post, I share some
ingenious algorithms that I have learned about both in courses and through my
own research.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>[2] Biggest Takeaways from The Missing Semester of Your CS Education</title>
        <published>2024-05-05T00:00:00+00:00</published>
        <updated>2024-05-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="http://localhost:3000/blog/missing-semester/"/>
        <id>http://localhost:3000/blog/missing-semester/</id>
        
        <summary type="html">&lt;p&gt;Nearly a year ago, I took an online course called
&lt;a href=&quot;https:&#x2F;&#x2F;missing.csail.mit.edu&#x2F;&quot;&gt;The Missing Semester of Your CS Education&lt;&#x2F;a&gt;. The
course was created by a group of MIT students and covers a wide range of topics
that are often overlooked in traditional computer science curriculums. The
course is designed to help students become more productive and efficient
programmers by teaching them essential skills that are not typically taught in
school.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
